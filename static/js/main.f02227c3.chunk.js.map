{"version":3,"sources":["Spinner.js","QuoteMachine.js","Footer.js","App.js","index.js"],"names":["Spinner","_ref","color","react_default","a","createElement","className","concat","role","QuoteMachine","state","quote","content","author","bgColor","loading","getColor","colors","Math","floor","random","length","getNewQuote","_callee","res","_ref2","quotes","number","regenerator_default","wrap","_context","prev","next","_this","setState","Object","objectSpread","fetch","sent","json","setTimeout","t0","stop","this","_this$state","_this$state$quote","encoded","encodeURIComponent","id","style","fontSize","src_Spinner","react","href","type","onClick","Component","Footer","target","rel","App","src_QuoteMachine","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f02227c3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Spinner = ({ color }) => {\n  return (\n    <div className={`spinner-border text-${color} mx-auto my-3`} role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n};\n\nSpinner.propTypes = {\n  color: PropTypes.string.isRequired\n};\n\nexport default Spinner;\n","import React, { Component, Fragment } from 'react';\nimport Spinner from './Spinner';\n\nclass QuoteMachine extends Component {\n  state = {\n    quote: {\n      content: '',\n      author: ''\n    },\n    bgColor: '',\n    loading: false\n  };\n\n  componentDidMount() {\n    this.setState({ ...this.state, bgColor: this.getColor() });\n  }\n\n  getColor = () => {\n    let colors = [\n      'primary',\n      'secondary',\n      'success',\n      'danger',\n      'warning',\n      'info',\n      'dark'\n    ];\n\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  getNewQuote = async () => {\n    this.setState({ ...this.state, loading: true, bgColor: this.getColor() });\n\n    try {\n      const res = await fetch(\n        'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\n      );\n      const { quotes } = await res.json();\n\n      let number = Math.floor(Math.random() * quotes.length);\n\n      setTimeout(() => {\n        this.setState({\n          quote: {\n            content: quotes[number].quote,\n            author: quotes[number].author\n          },\n          loading: false\n        });\n      }, 500);\n    } catch (error) {\n      this.setState({\n        ...this.state,\n        quote: { content: 'SERVER ERROR', author: '' },\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    const {\n      quote: { content, author },\n      loading,\n      bgColor\n    } = this.state;\n\n    const encoded = encodeURIComponent(`\"${content}\" -${author}`);\n\n    return (\n      <div className=\"container\">\n        <div className=\"row \">\n          <div className=\"col-md-6 mx-auto my-5\">\n            <div className=\"card text-center\" id=\"quote-box\">\n              <div className={`card-header bg-${bgColor} text-white`}>\n                <div className=\"card-title\">\n                  <h3 className=\"display-4 p-2\" style={{ fontSize: '36px' }}>\n                    Random Quote Machine\n                  </h3>\n                </div>\n              </div>\n              {loading ? (\n                <Spinner color={bgColor} />\n              ) : (\n                <Fragment>\n                  <div className=\"card-body\">\n                    <blockquote className=\"blockquote\" id=\"text\">\n                      <p>{content}</p>\n                    </blockquote>\n                    <footer className=\"blockquote-footer mb-2\" id=\"author\">\n                      {author}\n                    </footer>\n\n                    <div className=\"d-flex justify-content-center\">\n                      {author.length > 0 && (\n                        <a\n                          href={`https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=${encoded}`}\n                          id=\"tweet-quote\"\n                        >\n                          <i\n                            className={`fab fa-twitter fa-2x mr-3 text-${bgColor}`}\n                          />\n                        </a>\n                      )}\n\n                      <button\n                        type=\"button\"\n                        className={`btn btn-${bgColor} text-white`}\n                        onClick={this.getNewQuote}\n                        id=\"new-quote\"\n                      >\n                        New Quote\n                      </button>\n                    </div>\n                  </div>\n                </Fragment>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuoteMachine;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer text-center mt-5 fixed-bottom\">\n      <div className=\"d-flex justify-content-center row-hl\">\n        <div className=\"p-4 d-none d-sm-inline\">\n          <strong>David Mai</strong>\n        </div>\n        <div className=\"p-4\">\n          <a\n            href=\"http://david-mai.com/\"\n            className=\"text-dark\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fas fa-globe\" />\n          </a>\n        </div>\n        <div className=\"p-4\">\n          <a\n            href=\"https://www.linkedin.com/in/nldavidmai/\"\n            className=\"text-dark\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-linkedin\" />\n          </a>\n        </div>\n        <div className=\"p-4\">\n          <a\n            href=\"https://github.com/DevMai90\"\n            className=\"text-dark\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-github\" />\n          </a>\n        </div>\n        <div className=\"p-4\">\n          <a\n            href=\"https://twitter.com/devmai90\"\n            className=\"text-dark\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className=\"fab fa-twitter\" />\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport QuoteMachine from './QuoteMachine';\nimport Footer from './Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <QuoteMachine />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}